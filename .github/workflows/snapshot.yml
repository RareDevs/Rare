
name: "Snapshot"


on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: "Create a pre-release"
        default: false
        required: true
        type: boolean
  pull_request:
    branches:
      - main
    types: [closed]


permissions:
  contents: write
  discussions: write


jobs:

  version:
    name: Describe
    uses: ./.github/workflows/_job_version.yml

  title:
    needs: version
    name: Version ${{ needs.version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - run: "true"

  prerelease:
    if: ${{ inputs.prerelease }}
    needs: version
    name: Create pre-release
    runs-on: ubuntu-latest
    steps:
    - shell: bash
      run: >-
        gh release create
        "${{ needs.version.outputs.version }}"
        --prerelease
        --latest
        --target main
        --title "Pre-release ${{ needs.version.outputs.version }}"
        --generate-notes
        --notes-start-tag "${{ needs.version.outputs.previous }}"
        --discussion-category "Releases"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pypi:
    if: ${{ true }}
    needs: version
    name: PyPI
    uses: ./.github/workflows/_job_pypi.yml
    secrets: inherit
    with:
      version: ${{ needs.version.outputs.version }}
      publish: false

  nuitka-linux:
    if: ${{ true }}
    needs: version
    name: Nuitka Linux
    uses: ./.github/workflows/_job_nuitka-linux.yml
    with:
      version: ${{ needs.version.outputs.version }}
  nuitka-linux-release:
    if: ${{ inputs.prerelease }}
    needs: [version, nuitka-linux, prerelease]
    name: Nuitka Linux
    uses: ./.github/workflows/_job_publish.yml
    with:
      version: ${{ needs.version.outputs.version }}
      file1: Rare-${{ needs.version.outputs.version }}-linux.zip

  nuitka-macos:
    if: ${{ true }}
    needs: version
    name: Nuitka MacOS
    uses: ./.github/workflows/_job_nuitka-macos.yml
    with:
      version: ${{ needs.version.outputs.version }}
  nuitka-macos-release:
    if: ${{ inputs.prerelease }}
    needs: [version, nuitka-macos, prerelease]
    name: Nuitka MacOS
    uses: ./.github/workflows/_job_publish.yml
    with:
      version: ${{ needs.version.outputs.version }}
      file1: Rare-${{ needs.version.outputs.version }}-arm64-macos.app.zip
      file2: Rare-${{ needs.version.outputs.version }}-x86_64-macos.app.zip

  nuitka-windows:
    if: ${{ true }}
    needs: version
    name: Nuitka Windows
    uses: ./.github/workflows/_job_nuitka-windows.yml
    with:
      version: ${{ needs.version.outputs.version }}
  nuitka-windows-release:
    if: ${{ inputs.prerelease }}
    needs: [version, nuitka-windows, prerelease]
    name: Nuitka Windows
    uses: ./.github/workflows/_job_publish.yml
    with:
      version: ${{ needs.version.outputs.version }}
      file1: Rare-${{ needs.version.outputs.version }}-windows.zip

  cx-freeze-appimage:
    if: ${{ true }}
    needs: version
    name: cx-Freeze AppImage
    uses: ./.github/workflows/_job_cx-freeze-appimage.yml
    with:
      version: ${{ needs.version.outputs.version }}
  cx-freeze-appimage-release:
    if: ${{ inputs.prerelease }}
    needs: [version, cx-freeze-appimage, prerelease]
    name: cx-Freeze AppImage
    uses: ./.github/workflows/_job_publish.yml
    with:
      version: ${{ needs.version.outputs.version }}
      file1: Rare-${{ needs.version.outputs.version }}.AppImage

  cx-freeze-dmg:
    if: ${{ true }}
    needs: version
    name: cx-Freeze MacOS
    uses: ./.github/workflows/_job_cx-freeze-dmg.yml
    with:
      version: ${{ needs.version.outputs.version }}
  cx-freeze-dmg-release:
    if: ${{ inputs.prerelease }}
    needs: [version, cx-freeze-dmg, prerelease]
    name: cx-Freeze MacOS
    uses: ./.github/workflows/_job_publish.yml
    with:
      version: ${{ needs.version.outputs.version }}
      file1: Rare-${{ needs.version.outputs.version }}-arm64.dmg
      file2: Rare-${{ needs.version.outputs.version }}-x86_64.dmg

  cx-freeze-msi:
    if: ${{ true }}
    needs: version
    name: cx-Freeze Windows
    uses: ./.github/workflows/_job_cx-freeze-msi.yml
    with:
      version: ${{ needs.version.outputs.version }}
  cx-freeze-msi-release:
    if: ${{ inputs.prerelease }}
    needs: [version, cx-freeze-msi, prerelease]
    name: cx-Freeze Windows
    uses: ./.github/workflows/_job_publish.yml
    with:
      version: ${{ needs.version.outputs.version }}
      file1: Rare-${{ needs.version.outputs.version }}.msi
