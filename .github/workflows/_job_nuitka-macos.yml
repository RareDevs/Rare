name: _job_nuitka-macos

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: arm64
            pyarch: arm64
          - arch: x86_64
            pyarch: x64
    name: Package ${{ matrix.arch }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-python@v6
        with:
          cache: pip
          python-version: '3.12'
          check-latest: true
          architecture: ${{ matrix.pyarch }}
      - name: Install build dependencies
        run: |
          pip3 install nuitka ruff
      - name: Install target dependencies
        run: |
          pip3 install -r misc/requirements.in
      - name: Prepare
        shell: bash
        env:
          SETUPTOOLS_SCM_PRETEND_VERSION: ${{ inputs.version }}
        run: |
          git fetch origin +refs/tags/*:refs/tags/*
          ./tools/ui2py.sh --force
          ./tools/qrc2py.sh --force
          ./tools/ts2qm.py
          python3 -m setuptools_scm --force-write-version-files
      - name: Build
        env:
          SETUPTOOLS_SCM_PRETEND_VERSION: ${{ inputs.version }}
        run: >-
          arch -${{ matrix.arch }}
          python -m nuitka
          --assume-yes-for-downloads
          --show-scons
          --clang
          --lto=no
          --jobs=4
          --static-libpython=no
          --standalone
          --enable-plugin=anti-bloat
          --enable-plugin=pyside6
          --enable-plugin=multiprocessing
          --show-modules
          --show-anti-bloat-changes
          --follow-stdlib
          --follow-imports
          --nofollow-import-to="*.tests"
          --nofollow-import-to="*.distutils"
          --nofollow-import-to="distutils"
          --nofollow-import-to="unittest"
          --nofollow-import-to="pydoc"
          --nofollow-import-to="tkinter"
          --nofollow-import-to="test"
          --prefer-source-code
          --include-package=pypresence
          --include-package-data=qtawesome
          --include-data-dir=rare/resources/images/=rare/resources/images/
          --include-data-files=rare/resources/languages/rare_*.qm=rare/resources/languages/
          --output-filename=Rare.bin
          --file-description=Rare.bin
          --company-name=RareDevs
          --product-name=Rare
          --file-version=${{ inputs.version }}
          --product-version=${{ inputs.version }}
          --macos-create-app-bundle
          --macos-app-name=Rare
          --macos-app-mode=gui
          --macos-app-version=${{ inputs.version }}
          --macos-app-icon=rare/resources/images/Rare.icns
          rare
      - name: Strip
        run: |
          find rare.app -iname "*.so*" -type f -exec strip {} \;
          find rare.app -iname "*.dylib" -type f -exec strip {} \;
          find rare.app -iname "*.bin" -type f -exec strip {} \;
      - name: Compress
        shell: bash
        run: |
          mv rare.app Rare-${{ inputs.version }}-${{ matrix.arch }}.app
          python -c "import shutil; shutil.make_archive('Rare-${{ inputs.version }}-${{ matrix.arch }}.app', 'zip', '.', 'Rare-${{ inputs.version }}-${{ matrix.arch }}.app')"
          mv Rare-${{ inputs.version }}-${{ matrix.arch }}.app.zip Rare-${{ inputs.version }}-${{ matrix.arch }}-macos.app.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v5
        with:
          name: Rare-${{ inputs.version }}-${{ matrix.arch }}-macos.app.zip
          path: Rare-${{ inputs.version }}-${{ matrix.arch }}-macos.app.zip
